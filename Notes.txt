Alpaca backtrader integration:
https://github.com/alpacahq/alpaca-backtrader-api/tree/master

Backtrader sample:
https://medium.com/@pta.forwork/momentum-based-strategy-optimization-with-grid-search-on-backtrader-8c0d6cd1cc36

API doc: https://alpaca.markets/sdks/python/getting_started.html

RL based learner: https://github.com/theanh97/Deep-Reinforcement-Learning-with-Stock-Trading

RL implementation: https://pypi.org/project/stable-baselines3/

Paper: https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3690996
code: https://github.com/AI4Finance-Foundation/FinRL-Trading

TA_LIB: https://github.com/cgohlke/talib-build/releases
https://github.com/ta-lib/ta-lib-python

https://github.com/AI4Finance-Foundation/Deep-Reinforcement-Learning-for-Stock-Trading-DDPG-Algorithm-NIPS-2018

https://github.com/AI4Finance-Foundation/FinRL-Tutorials

Phase II: Stock Selection and Portfolio Allocation with Backtesting Results
Stock Selection: https://github.com/AI4Finance-Foundation/FinML
Portfolio Allocation: https://github.com/AI4Finance-Foundation/FinRL-Tutorials/blob/master/1-Introduction/FinRL_PortfolioAllocation_NeurIPS_2020.ipynb

Phase III: Deploy a DRL agent to an online trading platform
Deployment: Deploy strategies to online trading platforms such as Alpaca for paper trading
https://github.com/AI4Finance-Foundation/FinRL/blob/master/examples/FinRL_PaperTrading_Demo.ipynb